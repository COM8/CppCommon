# Programming language definition
language: cpp

# Build matrix (OS, compiler)
matrix:
  include:
    - os: linux
      compiler: gcc
      env: GCC_VERSION=5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
            - cmake
            - doxygen
            - graphviz
            - libbfd-dev
            - uuid-dev
    - os: linux
      compiler: clang
      env: CLANG_VERSION=3.6 GCC_VERSION=5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - gcc-5
            - g++-5
            - cmake
            - doxygen
            - graphviz
            - libbfd-dev
            - uuid-dev
# Temporary disable OSX build
#    - os: osx
#      osx_image: xcode8
#      compiler: clang

# Using Trusty environment
sudo: required
dist: trusty

# Branches to build
branches:
  only:
    - master

# Clone depth
git:
  depth: 5

# Scripts that run before install
before_install:
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  - git config --global push.default simple
  - if [[ -n "$GCC_VERSION" ]]; then sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-${GCC_VERSION} /usr/bin/gcc; fi
  - if [[ -n "$GCC_VERSION" ]]; then sudo unlink /usr/bin/g++ && sudo ln -s /usr/bin/g++-${GCC_VERSION} /usr/bin/g++; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install doxygen; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install graphviz; fi

# Build scripts
script: 
  - cd scripts
  - ./01-generate-Unix.sh
  - ./02-build-Unix.sh
  - ./03-tests.sh
  - ./04-install-Unix.sh
  - ./05-doxygen-Unix.sh
  - ./06-clean.sh

# Don't send notifications on success
notifications:
  email:
    on_success: never
